package com.server.hkj.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HkjCartAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHkjCartAllPropertiesEquals(HkjCart expected, HkjCart actual) {
        assertHkjCartAutoGeneratedPropertiesEquals(expected, actual);
        assertHkjCartAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHkjCartAllUpdatablePropertiesEquals(HkjCart expected, HkjCart actual) {
        assertHkjCartUpdatableFieldsEquals(expected, actual);
        assertHkjCartUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHkjCartAutoGeneratedPropertiesEquals(HkjCart expected, HkjCart actual) {
        assertThat(expected)
            .as("Verify HkjCart auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHkjCartUpdatableFieldsEquals(HkjCart expected, HkjCart actual) {
        assertThat(expected)
            .as("Verify HkjCart relevant properties")
            .satisfies(e -> assertThat(e.getQuantity()).as("check quantity").isEqualTo(actual.getQuantity()))
            .satisfies(e -> assertThat(e.getIsDeleted()).as("check isDeleted").isEqualTo(actual.getIsDeleted()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHkjCartUpdatableRelationshipsEquals(HkjCart expected, HkjCart actual) {
        assertThat(expected)
            .as("Verify HkjCart relationships")
            .satisfies(e -> assertThat(e.getCustomer()).as("check customer").isEqualTo(actual.getCustomer()));
    }
}
