package com.server.hkj.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HkjTaskImageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHkjTaskImageAllPropertiesEquals(HkjTaskImage expected, HkjTaskImage actual) {
        assertHkjTaskImageAutoGeneratedPropertiesEquals(expected, actual);
        assertHkjTaskImageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHkjTaskImageAllUpdatablePropertiesEquals(HkjTaskImage expected, HkjTaskImage actual) {
        assertHkjTaskImageUpdatableFieldsEquals(expected, actual);
        assertHkjTaskImageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHkjTaskImageAutoGeneratedPropertiesEquals(HkjTaskImage expected, HkjTaskImage actual) {
        assertThat(expected)
            .as("Verify HkjTaskImage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHkjTaskImageUpdatableFieldsEquals(HkjTaskImage expected, HkjTaskImage actual) {
        assertThat(expected)
            .as("Verify HkjTaskImage relevant properties")
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHkjTaskImageUpdatableRelationshipsEquals(HkjTaskImage expected, HkjTaskImage actual) {
        assertThat(expected)
            .as("Verify HkjTaskImage relationships")
            .satisfies(e -> assertThat(e.getHkjTask()).as("check hkjTask").isEqualTo(actual.getHkjTask()));
    }
}
